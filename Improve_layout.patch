Index: app/src/main/res/layout/item_device.xml
===================================================================
--- app/src/main/res/layout/item_device.xml	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/res/layout/recyclerview_item_device.xml	(date 1594080993000)
@@ -1,22 +1,26 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
+    android:layout_height="wrap_content"
+    android:background="@drawable/bt_display_selector"
+    android:orientation="vertical"
+    android:layout_marginStart="8dp"
+    android:layout_marginBottom="8dp"
+    android:layout_marginLeft="8dp">
 
     <TextView
+        android:id="@+id/device_name"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:textAppearance="?android:attr/textAppearanceLarge"
+        android:layout_marginLeft="10dp"
         android:text="device_name"
-        android:id="@+id/device_name"
-        android:layout_marginLeft="10dp" />
+        android:textAppearance="?android:attr/textAppearanceLarge" />
 
     <TextView
+        android:id="@+id/device_addr"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:layout_marginLeft="10dp"
         android:text="device_addr"
-        android:id="@+id/device_addr"
-        android:layout_marginLeft="10dp" />
+        android:textAppearance="?android:attr/textAppearanceMedium" />
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/recyclerview_row.xml
===================================================================
--- app/src/main/res/layout/recyclerview_row.xml	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/res/layout/recyclerview_item_raw_data_row.xml	(date 1594080993000)
@@ -1,0 +1,0 @@
Index: app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothSerialThread.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothSerialThread.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothSerialThread.java	(date 1594080993000)
@@ -21,11 +21,9 @@
     private final BluetoothSocket mmSocket;
     private final BufferedReader mmInStream;
     private final OutputStream mmOutStream;
-    private Context context;
     private SharedDataViewModel sharedData;
 
-    public BluetoothSerialThread(Context context, BluetoothSocket socket, SharedDataViewModel sharedData) {
-        this.context = context;
+    public BluetoothSerialThread(BluetoothSocket socket, SharedDataViewModel sharedData) {
         this.sharedData = sharedData;
         mmSocket = socket;
         InputStream tmpIn = null;
Index: app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothService.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothService.java	(date 1594080993000)
@@ -24,7 +24,7 @@
 
     private static final UUID BT_MODULE_UUID = UUID.fromString("00001101-0000-1000-8000-00805F9B34FB"); // "random" unique identifier
     private BluetoothSocket socket;
-
+    private BluetoothDevice device;
     private BluetoothSerialThread mBluetoothSerialThread;
 
     private SharedDataViewModel sharedData;
@@ -38,23 +38,40 @@
         this.sharedData = sharedData;
     }
 
+
+    public BluetoothDevice getConnectedDevice() {
+        return device;
+    }
+
+
+    /**
+     * Called when we wanna write to bluetooth device
+     * @param data data to write
+     */
     public void writeToBluetoothDevice(String data) {
         mBluetoothSerialThread.write(data);
     }
 
 
+    /**
+     * Check if socket is connected
+     * @return true if serial bluetooth socket is connected, false otherwise
+     */
+    public boolean isConnected() {
+        if(socket != null) {
+            return socket.isConnected();
+        }
+        return false;
+    }
+
+
     /**
      * Disconnect from bluetooth device
      */
     public void disconnect() {
-        if(mBluetoothSerialThread != null) {
-            mBluetoothSerialThread.cancel();
-            mBluetoothSerialThread.interrupt();
-            sendBtStatus("Disconnecting..");
-        }
-        else {
-            sendBtStatus("Not connected!");
-        }
+        mBluetoothSerialThread.interrupt();
+        mBluetoothSerialThread = null;
+        device = null;
     }
 
 
@@ -94,8 +111,9 @@
                     }
                 }
                 if(!fail) {
-                    mBluetoothSerialThread = new BluetoothSerialThread(getApplicationContext(), socket, sharedData);
+                    mBluetoothSerialThread = new BluetoothSerialThread(socket, sharedData);
                     mBluetoothSerialThread.start();
+                    device = socket.getRemoteDevice();
                     sendBtStatus("Connected! reading data..");
                 }
             }
Index: app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothController.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothController.java	(date 1594080993000)
@@ -6,4 +6,6 @@
     void connectBtDevice(BluetoothDevice bd);
     void disconnectBtDevice();
     void writeToBT(String data);
+    boolean isConnected();
+    BluetoothDevice getConnectedDevice();
 }
Index: app/src/main/java/com/bfv/BFVAndroid/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/MainActivity.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/MainActivity.java	(date 1594080993000)
@@ -53,6 +53,8 @@
         NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);
         NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);
         NavigationUI.setupWithNavController(navView, navController);
+
+        // TODO: implement swipe support
     }
 
 
@@ -64,7 +66,7 @@
         @Override
         public void onReceive(Context context, Intent intent) {
             String status = intent.getStringExtra("btStatus");
-            Toast.makeText(getApplicationContext(), status, Toast.LENGTH_SHORT).show();
+            //Toast.makeText(getApplicationContext(), "BROADCAST: " + status, Toast.LENGTH_SHORT).show();
         }
     };
 
@@ -103,6 +105,19 @@
         }
     }
 
+    @Override
+    public boolean isConnected() {
+        return bluetoothService.isConnected();
+    }
+
+    @Override
+    public BluetoothDevice getConnectedDevice() {
+        if(bluetoothService.isConnected()) {
+            return bluetoothService.getConnectedDevice();
+        }
+        return null;
+    }
+
 
     /**
      * Inflate menu
Index: app/src/main/java/com/bfv/BFVAndroid/SharedDataViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/SharedDataViewModel.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/SharedDataViewModel.java	(date 1594080993000)
@@ -58,15 +58,15 @@
      * ConnectionStatus Setters
      */
     public void setConnectionStatus(String customConnectionStatus) {
-        connectionStatus.setValue(customConnectionStatus);
+        connectionStatus.postValue(customConnectionStatus);
     }
 
     public void setConnectionStatusConnected() {
-        connectionStatus.setValue("Connected");
+        connectionStatus.postValue("Connected");
     }
 
     public void setConnectionStatusDisconnected() {
-        connectionStatus.setValue("Disconnected");
+        connectionStatus.postValue("Disconnected");
     }
 
 
Index: app/src/main/res/layout/fragment_devices.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_devices.xml	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/res/layout/fragment_devices.xml	(date 1594080993000)
@@ -8,34 +8,6 @@
     tools:context=".ui.devices.DevicesFragment">
 
 
-    <Button
-        android:id="@+id/connect_button"
-        android:layout_width="0dp"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="32dp"
-        android:layout_marginLeft="32dp"
-        android:layout_marginEnd="32dp"
-        android:layout_marginRight="32dp"
-        android:paddingTop="10dp"
-        android:paddingBottom="10dp"
-        android:text="connect"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/statusTextView" />
-
-    <ListView
-        android:id="@+id/device_selector"
-        android:layout_width="409dp"
-        android:layout_height="350dp"
-        android:layout_marginTop="32dp"
-        android:layout_marginBottom="16dp"
-        android:choiceMode="singleChoice"
-        android:drawSelectorOnTop="false"
-        android:listSelector="@drawable/bt_display_selector"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/connect_button"
-        tools:layout_editor_absoluteX="1dp" />
-
     <TextView
         android:id="@+id/statusTextView"
         android:layout_width="match_parent"
@@ -47,8 +19,22 @@
         android:paddingBottom="10dp"
         android:textAlignment="center"
         android:textSize="20sp"
+        app:layout_constraintBottom_toTopOf="@id/bluetoothDevicesRecyclerView"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
 
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/bluetoothDevicesRecyclerView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="32dp"
+        android:layout_marginBottom="64dp"
+        android:clickable="true"
+        android:focusable="true"
+        android:focusableInTouchMode="true"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/statusTextView"
+        tools:listitem="@layout/recyclerview_item_device" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/bfv/BFVAndroid/ui/dashboard/RawDataFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/ui/dashboard/RawDataFragment.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/ui/dashboard/RawDataFragment.java	(date 1594080993000)
@@ -41,10 +41,13 @@
         // Set shareData observers
         sharedData.getRawData().observe(getViewLifecycleOwner(), rawDataObserver);
 
-        // Attach rawData Adapter to RecyclerView
+        // Setup rawData RecyclerView
         rawDataRecyclerView = rootView.findViewById(R.id.rawDataRecyclerView);
-        rawDataArray = new ArrayList<>();
         rawDataRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
+
+
+        // Attach rawData Adapter to RecyclerView
+        rawDataArray = new ArrayList<>();
         rawDataAdapter = new RawDataViewAdapter(getContext(), rawDataArray);
         rawDataRecyclerView.setAdapter(rawDataAdapter);
 
Index: app/src/main/java/com/bfv/BFVAndroid/ui/dashboard/RawDataViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/ui/dashboard/RawDataViewAdapter.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/ui/dashboard/RawDataViewAdapter.java	(date 1594080993000)
@@ -12,6 +12,10 @@
 
 import java.util.List;
 
+
+/**
+ * C/P from net, don't know where from, but it works
+ */
 public class RawDataViewAdapter extends RecyclerView.Adapter<RawDataViewAdapter.ViewHolder> {
     private List<String> mData;
     private LayoutInflater mInflater;
@@ -26,15 +30,15 @@
     // inflates the row layout from xml when needed
     @Override
     public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        View view = mInflater.inflate(R.layout.recyclerview_row, parent, false);
+        View view = mInflater.inflate(R.layout.recyclerview_item_raw_data_row, parent, false);
         return new ViewHolder(view);
     }
 
     // binds the data to the TextView in each row
     @Override
     public void onBindViewHolder(ViewHolder holder, int position) {
-        String animal = mData.get(position);
-        holder.myTextView.setText(animal);
+        String rawDataItem = mData.get(position);
+        holder.myTextView.setText(rawDataItem);
     }
 
     // total number of rows
Index: app/src/main/res/drawable/bt_display_selector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bt_display_selector.xml	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/res/drawable/bt_display_selector.xml	(date 1594080993000)
@@ -1,25 +1,22 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
     <!-- Normal state. -->
-    <item android:state_pressed="false"
-        android:state_selected="false">
-        <shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:state_selected="false">
+        <shape>
             <solid android:color="@color/list_row_default_bg" />
             <corners android:radius="6dp" />
         </shape>
     </item>
-    <!-- pressed state. -->
-    <item android:state_pressed="true"
-        android:state_selected="false">
-        <shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <!-- Pressed state. -->
+    <item android:state_pressed="true" android:state_selected="false">
+        <shape>
             <solid android:color="@color/list_row_pressed_bg" />
             <corners android:radius="6dp" />
         </shape>
     </item>
     <!-- Selected state. -->
-    <item android:state_pressed="false"
-        android:state_selected="true">
-        <shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:state_selected="true">
+        <shape>
             <solid android:color="@color/list_row_selected_bg" />
             <corners android:radius="6dp" />
         </shape>
Index: app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothDeviceAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothDeviceAdapter.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/bluetooth/BluetoothDeviceAdapter.java	(date 1594080993000)
@@ -1,56 +1,86 @@
 package com.bfv.BFVAndroid.bluetooth;
 
+
 import android.bluetooth.BluetoothDevice;
 import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ArrayAdapter;
 import android.widget.TextView;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 import com.bfv.BFVAndroid.R;
 
 import java.util.ArrayList;
 
 
-public class BluetoothDeviceAdapter extends ArrayAdapter<BluetoothDevice> {
-    /**
-     * Default constructor
-     * @param context The context to create the adapter in
-     * @param devices The array of devices we are going to display
-     */
+/**
+ * C/P from net, don't know where from, but it works
+ */
+public class BluetoothDeviceAdapter extends RecyclerView.Adapter<BluetoothDeviceAdapter.ViewHolder> {
+    private ArrayList<BluetoothDevice> devices;
+    private LayoutInflater mInflater;
+    private ItemClickListener mClickListener;
+
+    // devices array is passed into the constructor
     public BluetoothDeviceAdapter(Context context, ArrayList<BluetoothDevice> devices) {
-        super(context, 0, devices);
+        this.mInflater = LayoutInflater.from(context);
+        this.devices = devices;
     }
 
+    // inflates the row layout from xml when needed
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        View view = mInflater.inflate(R.layout.recyclerview_item_device, parent, false);
+        return new ViewHolder(view);
+    }
 
-    /**
-     * Get the view for a particular BluetoothDevice
-     * @param position The index of the device we are rendering
-     * @param convertView The View we are going to render
-     * @param parent The parent of the View we are rendering
-     */
+    // binds the data to the TextView in each row
     @Override
-    public View getView(final int position, View convertView, ViewGroup parent) {
-        BluetoothDevice device = getItem(position);
+    public void onBindViewHolder(ViewHolder holder, int position) {
+        BluetoothDevice device = devices.get(position);
+        holder.deviceName.setText(device.getName());
+        holder.deviceAddr.setText(device.getAddress());
+    }
 
-        if (convertView == null) {
-            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_device, parent, false);
-        }
+    // total number of rows
+    @Override
+    public int getItemCount() {
+        return devices.size();
+    }
 
-        TextView deviceName = (TextView) convertView.findViewById(R.id.device_name);
-        TextView deviceAddr = (TextView) convertView.findViewById(R.id.device_addr);
 
-        deviceName.setText(device.getName());
-        deviceAddr.setText(device.getAddress());
+    // stores and recycles views as they are scrolled off screen
+    public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+        TextView deviceName;
+        TextView deviceAddr;
 
-//        convertView.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View view) {
-//                Toast.makeText(getContext(), "click on " + position, Toast.LENGTH_SHORT).show();
-//            }
-//        });
+        ViewHolder(View itemView) {
+            super(itemView);
+            deviceName = itemView.findViewById(R.id.device_name);
+            deviceAddr = itemView.findViewById(R.id.device_addr);
+            itemView.setOnClickListener(this);
+        }
 
-        return convertView;
+        @Override
+        public void onClick(View view) {
+            if (mClickListener != null) mClickListener.onBluetoothDeviceItemClick(view, getAdapterPosition());
+        }
+    }
+
+    // convenience method for getting data at click position
+    public BluetoothDevice getDevice(int id) {
+        return devices.get(id);
+    }
+
+    // allows clicks events to be caught
+    public void setClickListener(ItemClickListener itemClickListener) {
+        this.mClickListener = itemClickListener;
+    }
+
+    // parent activity will implement this method to respond to click events
+    public interface ItemClickListener {
+        void onBluetoothDeviceItemClick(View view, int position);
     }
 }
Index: app/src/main/res/layout/fragment_raw_data.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_raw_data.xml	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/res/layout/fragment_raw_data.xml	(date 1594080993000)
@@ -9,7 +9,8 @@
     <androidx.recyclerview.widget.RecyclerView
         android:id="@+id/rawDataRecyclerView"
         android:layout_width="match_parent"
-        android:layout_height="match_parent">
+        android:layout_height="match_parent"
+        tools:listitem="@layout/recyclerview_item_raw_data_row">
 
     </androidx.recyclerview.widget.RecyclerView>
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/bfv/BFVAndroid/ui/devices/DevicesFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/bfv/BFVAndroid/ui/devices/DevicesFragment.java	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/java/com/bfv/BFVAndroid/ui/devices/DevicesFragment.java	(date 1594080993000)
@@ -8,8 +8,6 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.ListView;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -18,6 +16,8 @@
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.Observer;
 import androidx.lifecycle.ViewModelProvider;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 import com.bfv.BFVAndroid.bluetooth.BluetoothController;
 import com.bfv.BFVAndroid.bluetooth.BluetoothDeviceAdapter;
@@ -28,20 +28,23 @@
 import java.util.Set;
 
 
-public class DevicesFragment extends Fragment {
+public class DevicesFragment extends Fragment{
     private BluetoothController btCallback;
-    private ArrayList<BluetoothDevice> devicesList = new ArrayList<>();
 
     private SharedDataViewModel sharedData;
     private View rootView;
     private TextView statusTextView;
-    private ListView deviceSelector;
 
     private BluetoothAdapter mBtAdapter;
     private Set<BluetoothDevice> pairedDevices;
     private boolean asked;
 
 
+    private RecyclerView bluetoothDevicesRecyclerView;
+    private ArrayList<BluetoothDevice> bluetoothDevicesArray;
+    private BluetoothDeviceAdapter bluetoothDevicesAdapter;
+
+
     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
 
@@ -54,33 +57,20 @@
         // Shared data observers
         sharedData.getConnectionStatus().observe(getViewLifecycleOwner(), statusObserver);
 
-        // Device list
-        deviceSelector = rootView.findViewById(R.id.device_selector);
-
         // Set Bluetooth adapter
         mBtAdapter = BluetoothAdapter.getDefaultAdapter();
 
         // Connect Views to rootView
-        Button connectButton = rootView.findViewById(R.id.connect_button);
         statusTextView = rootView.findViewById(R.id.statusTextView);
 
-        // TODO: remove buttons
-        connectButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                //Do we have something valid selected?
-                if (deviceSelector.getCheckedItemCount() == 1) {
-                    int devicePos = deviceSelector.getCheckedItemPosition();
-                    BluetoothDevice device = devicesList.get(devicePos);
+        // Setup bluetoothDevices RecyclerView
+        bluetoothDevicesRecyclerView = rootView.findViewById(R.id.bluetoothDevicesRecyclerView);
+        bluetoothDevicesRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
 
-                    btCallback.connectBtDevice(device);
-                    // TODO: on successful connection go to DashboardFragment
-                }
-                else {
-                    Toast.makeText(getContext(), "No device selected!", Toast.LENGTH_SHORT).show();
-                }
-            }
-        });
+        // Attach bluetoothDevices Adapter to RecyclerView
+        bluetoothDevicesArray = new ArrayList<>();
+        bluetoothDevicesAdapter = new BluetoothDeviceAdapter(getContext(), bluetoothDevicesArray);
+        bluetoothDevicesRecyclerView.setAdapter(bluetoothDevicesAdapter);
 
         // List already paired devices
         listPairedDevices();
@@ -118,6 +108,7 @@
                 asked = true;
             }
             else {
+                sharedData.setConnectionStatus("Bluetooth Disabled!");
                 Toast.makeText(getContext(), "Please Enable Bluetooth!", Toast.LENGTH_LONG).show();
             }
         } else {
@@ -126,18 +117,50 @@
 
             // Check if we have any devices
             if (pairedDevices.isEmpty()) {
+                sharedData.setConnectionStatus("No paired devices!");
                 Toast.makeText(getContext(), "No paired devices! Please pair one via your phone's Settings!", Toast.LENGTH_LONG).show();
             } else {
-                // Convert to arrayList for display
-                devicesList.clear();
-                devicesList.addAll(pairedDevices);
+                // Add paired devices to array and notify adapter
+                bluetoothDevicesArray.addAll(pairedDevices);
+                bluetoothDevicesAdapter.notifyDataSetChanged();
+                bluetoothDevicesAdapter.setClickListener(getItemClickListener());
+            }
+
+        }
+    }
+
+
+    private BluetoothDeviceAdapter.ItemClickListener getItemClickListener() {
+        return new BluetoothDeviceAdapter.ItemClickListener() {
+            @Override
+            public void onBluetoothDeviceItemClick(View v, int position) {
+                BluetoothDevice deviceToConnectTo = bluetoothDevicesAdapter.getDevice(position);
 
-                // Set adapter
-                BluetoothDeviceAdapter arrayAdapter = new BluetoothDeviceAdapter(getActivity(), devicesList);
-                deviceSelector.setAdapter(arrayAdapter);
-            }
+                // if we are not connected Connect
+                if ( ! btCallback.isConnected()) {
+                    btCallback.connectBtDevice(deviceToConnectTo);
+
+                    // TODO: possible bug, extra check if we are connected, we shoud find a better way to track connection status
+                    //  - only source of truth should be socket.isConnected()
+                    if(btCallback.isConnected()){
+                        Toast.makeText(getContext(), "Connected to: " + deviceToConnectTo.getName(), Toast.LENGTH_LONG).show();
+                        sharedData.setConnectionStatusConnected();
+                    }
+                }
+                else {
+                    // If user clicked on connected device -> disconnect
+                    BluetoothDevice previuslyConnectedDevice = btCallback.getConnectedDevice();
+                    if (previuslyConnectedDevice.equals(deviceToConnectTo)) {
+                        btCallback.disconnectBtDevice();
+                        Toast.makeText(getContext(), "Disconnecting..", Toast.LENGTH_SHORT).show();
+                        sharedData.setConnectionStatusDisconnected();
+                    }
 
-        }
+                    //
+                    Toast.makeText(getContext(), "Already connected to: " + previuslyConnectedDevice.getName(), Toast.LENGTH_LONG).show();
+                }
+            }
+        };
     }
 
 
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 8606cb379eb541b1d97173cb881d006ba973bcc5)
+++ app/src/main/res/values/colors.xml	(date 1594080993000)
@@ -4,9 +4,9 @@
     <color name="colorPrimaryDark">#3700B3</color>
     <color name="colorAccent">#03DAC5</color>
 
-    <color name="list_row_default_bg">#cccccc</color>
-    <color name="list_row_pressed_bg">#aaaaaa</color>
-    <color name="list_row_selected_bg">#cccccc</color>
+    <color name="list_row_default_bg">#5CCCCCCC</color>
+    <color name="list_row_pressed_bg">#cccccc</color>
+    <color name="list_row_selected_bg">#00BCD4</color>
 
     <color name="blue">#03A9F4</color>
 </resources>
\ No newline at end of file
